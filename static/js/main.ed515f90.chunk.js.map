{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/whiteHeartIcon.svg","images/logoreceitapp.png","Services/FetchSearch.js","Context/AppContext.js","Components/SearchBar.js","Components/Header.js","Components/Footer.js","Pages/Explore.js","hooks/useRandom.js","Pages/ExploreDrinksAndFoods.js","Pages/ExploreDrinksAndFoodsByIngredients.js","Pages/ExploreFoodsByOrigin.js","Services/fetchMeals.js","Services/fetchCocktails.js","hooks/useFilter.js","hooks/useFilterIngredient.js","Pages/FoodsAndDrinks.js","Pages/Login.js","hooks/useFilterMadeAndFavorite.js","Components/CardMade.js","Components/CardFavorite.js","Pages/MadeAndFavoriteRecipes.js","Pages/NotFound.js","Pages/Profile.js","Components/FavoriteButtonIcon.js","Components/RecipeDetailsFavoriteButton.js","Components/RecipeDetailHeader.js","Components/RecipeDetailIngredients.js","Components/RecipeDetailInstructions.js","Components/RecipeDetailVideo.js","Components/RecipeDetailsRecomendations.js","Components/RecipeDetailButton.js","Pages/RecipesDetails.js","Components/RecipeInProgressCheckBox.js","Components/RecipeInProgressIngredients.js","Components/RecipeInProgressButton.js","Pages/RecipeInProgress.js","Services/Routes.js","Context/AppProvider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL_F_INGREDIENT","URL_F_NAME","URL_F_LETTER","URL_D_INGREDIENT","URL_D_NAME","URL_D_LETTER","pathname","typeSearch","contentSearch","a","fetch","then","response","json","meals","drinks","FetchSearch","AppContext","createContext","SearchBar","useState","oneRecipe","state","setState","useLocation","useContext","setSearch","setLoadSearch","handleChange","target","name","value","recipesSearch","inputSearch","radioSearch","results","length","alert","console","log","idMeal","idDrink","splice","to","redirectTo","type","data-testid","className","placeholder","onChange","htmlFor","id","onClick","showSearchBar","show","Header","titlePage","btSearch","src","iconProfile","alt","iconSearch","Footer","iconDrink","iconExplore","iconFood","Explore","foods","setRedirectTo","handleClick","useRandom","setId","useEffect","randomRecipe","generateId","ExploreDrinksAndFoods","ingredients","surprise","pag","handleSurpriseClick","variant","ExploreDrinksAndFoodsByIngredients","setIngredients","setIngredientFilter","setFoodOrDrink","redirect","setRedirect","data","result","handleClickBebidas","ingredient","filter","indexOf","map","index","key","handleClickComidas","strIngredient","strIngredient1","Spinner","animation","role","ExploreFoodsByOrigin","setFoods","areas","setAreas","area","setArea","areasResult","foodsResult","api","ar","strArea","item","foodId","strMealThumb","strMeal","getMealByID","ID","endpoint","fetchMeals","fetchMealsCategories","fetchMealsCategory","category","ENDPOINT","getCocktailByID","fetchCocktails","fetchCocktailsCategories","fetchCocktailsCategory","useFilter","globalState","setFilter","setCategory","numCards","itemsFiltered","slice","filters","useFilterIngredient","itemsByIngredient","setItemsByIngredient","foodOrDrink","ingredientFilter","FoodsAndDrinks","mealsCategories","drinksCategories","loadSearch","search","cards","buttons","filterCategory","redirectToRecipe","idCard","strCategory","cardList","fillCards","Login","setUserEmail","email","setMail","password","setPassword","formValidation","setFormValidation","redirectValidation","setRedirectValidation","emailValidation","passwordValidation","test","handleValidation","Logo","Form","Group","controlId","Control","event","Text","Button","disabled","localStorage","setItem","JSON","stringify","useFilterMadeAndFavorite","madeRecipes","setMadeRecipes","recipes","setRecipes","saved","parse","getItem","savedRecipes","cardsFiltered","CardMade","props","recipe","copyPath","copyMessage","shareId","image","doneDate","tags","alcoholicOrNot","urlDetails","share","style","display","tag","CardFavorite","deleteFavorite","blackHeartIcon","MadeAndFavoriteRecipes","setCopyMessage","setShareId","types","filterType","all","food","drink","copy","NotFound","Profile","mailUser","getUser","clear","FavoriteButtonIcon","isFavorite","removeFavorite","newFavorite","whiteHeartIcon","RecipeDetailFavoriteButton","recipeID","setIsFavorite","favoritesStorage","favorite","verifyFavorite","find","verifyIsFavorite","newFavorites","favoritesRecipes","favoriteData","strAlcoholic","strDrink","strDrinkThumb","RecipeDetailHeader","recipeName","setRecipeName","recipeCategory","setRecipeCategory","displaycopymessage","setDisplayCopyMessage","recipeType","setRecipeType","url","setUrl","shareIcon","RecipeDetailIngredients","ingredientsList","setIngredientsList","measuresList","setMeasuresList","arrayOfIngredientes","Object","entries","includes","arrayOfMeasures","measure","RecipeDetailInstructions","strInstructions","RecipeDetailVideo","videoSource","videoID","setVideoID","undefined","split","width","frameBorder","allow","allowFullScreen","title","RecipeDetailsRecomendations","recomendationList","setRecomendationList","firstSixMeals","getMealsRecomendations","firstSixDrinks","getDrinkRecomendations","Card","Img","Body","Subtitle","Title","defaultInProgresStorage","cocktails","RecipeDetailButton","recipeStatus","setRecipeStatus","ingredientsEMeasuresList","setIngredientsEMeasuresList","done","inProgressStorage","doneStorage","recipeIsDone","verifyItsDone","verifyIsInProgress","startedRecipe","RecipesDetails","setRecipe","useParams","strYoutube","RecipeInProgressCheckBox","isChecked","changeChecked","checkState","setCheckState","checked","currentIndex","RecipeInProgressIngredients","ingredientList","setMadeRecipe","element","newIngredientsList","every","RecipeInProgressButton","doneRecipesStorage","Date","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","dataAtual","arrayOfTags","strTags","madeRecipeObject","newDoneRecipesStorage","finishRecipe","madeRecipe","RecipeInProgress","getIngredients","Routes","exact","path","component","render","ExploreDrinksAndFoodsByIng","status","Provider","children","setMeals","setDrinks","setMealsCategories","setDrinksCategories","userEmail","contextValue","mealsApi","drinksApi","mealsCategoriesApi","drinksCategoriesApi","getMealsAndDrinks","App","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed515f90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoreceitapp.ecee03f3.png\";","const URL_F_INGREDIENT = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\nconst URL_F_NAME = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst URL_F_LETTER = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\n\nconst URL_D_INGREDIENT = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\nconst URL_D_NAME = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst URL_D_LETTER = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?f=';\n\nasync function FetchSearch(pathname, typeSearch, contentSearch) {\n  // console.log(`quem ${pathname} tipo ${typeSearch} o que ${contentSearch}`);\n  if (pathname === '/comidas') {\n    if (typeSearch === 'ingredient') {\n      const { meals } = await fetch(URL_F_INGREDIENT + contentSearch)\n        .then((response) => response.json());\n      return meals;\n    }\n    if (typeSearch === 'name') {\n      const { meals } = await fetch(URL_F_NAME + contentSearch)\n        .then((response) => response.json());\n      return meals;\n    }\n    if (typeSearch === 'firstLetter') {\n      const { meals } = await fetch(URL_F_LETTER + contentSearch)\n        .then((response) => response.json());\n      return meals;\n    }\n  }\n\n  if (pathname === '/bebidas') {\n    if (typeSearch === 'ingredient') {\n      const { drinks } = await fetch(URL_D_INGREDIENT + contentSearch)\n        .then((response) => response.json());\n      return drinks;\n    }\n    if (typeSearch === 'name') {\n      const { drinks } = await fetch(URL_D_NAME + contentSearch)\n        .then((response) => response.json());\n      return drinks;\n    }\n    if (typeSearch === 'firstLetter') {\n      const { drinks } = await fetch(URL_D_LETTER + contentSearch)\n        .then((response) => response.json());\n      return drinks;\n    }\n  }\n}\n\nexport default FetchSearch;\n","import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { useState, useContext } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport FetchSearch from '../Services/FetchSearch';\nimport AppContext from '../Context/AppContext';\nimport './search-bar.css';\n\nfunction SearchBar() {\n  const [state, setState] = useState({ oneRecipe: '' });\n  const { pathname } = useLocation();\n  const { setSearch, setLoadSearch } = useContext(AppContext);\n\n  const handleChange = ({ target: { name, value } }) => {\n    // const value = target.type === 'checkbox' ? target.checked : target.value\n    setState({\n      ...state, [name]: value,\n    });\n  };\n\n  const recipesSearch = async () => {\n    const contentSearch = state.inputSearch;\n    // console.log(state.radioSearch);\n    let results;\n    const typeSearch = state.radioSearch;\n    if (state.radioSearch === 'ingredient') {\n      results = await FetchSearch(pathname, typeSearch, contentSearch);\n      setState({\n        ...state, results,\n      });\n    }\n    if (state.radioSearch === 'name') {\n      results = await FetchSearch(pathname, typeSearch, contentSearch);\n      setState({\n        ...state, results,\n      });\n    }\n\n    if (state.radioSearch === 'firstLetter') {\n      if (contentSearch.length > 1) {\n        alert('Sua busca deve conter somente 1 (um) caracter');\n      } else {\n        results = await FetchSearch(pathname, typeSearch, contentSearch);\n        setState({\n          ...state, results,\n        });\n      }\n    }\n    console.log(results);\n    if (!results) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    }\n\n    if (results) {\n      if (results.length === 1 && pathname === '/comidas') {\n      // console.log(results[0].idMeal);\n        setState({\n          ...state, oneRecipe: results[0].idMeal,\n        });\n      }\n      if (results.length === 1 && pathname === '/bebidas') {\n        setState({\n          ...state, oneRecipe: results[0].idDrink,\n        });\n      }\n    }\n    const maxRecipes = 12;\n    setSearch(results.splice(0, maxRecipes));\n    setLoadSearch(true);\n    return results;\n  };\n\n  const redirectTo = () => {\n    if (state.oneRecipe !== '') {\n      return <Redirect to={ `${pathname}/${state.oneRecipe}` } />;\n    }\n  };\n\n  return (\n    <div>\n      { redirectTo()}\n      <form>\n        <input\n          type=\"text\"\n          data-testid=\"search-input\"\n          className=\"input-text\"\n          name=\"inputSearch\"\n          placeholder=\"Pesquisar Receita\"\n          onChange={ handleChange }\n        />\n        <div className=\"container-radios\">\n          <label htmlFor=\"radioSearch-ingredient\">\n            <input\n              type=\"radio\"\n              data-testid=\"ingredient-search-radio\"\n              id=\"radioSearch-ingredient\"\n              className=\"radio\"\n              name=\"radioSearch\"\n              onChange={ handleChange }\n              value=\"ingredient\"\n            />\n            Ingrediente\n          </label>\n          <label htmlFor=\"radioSearch-name\">\n            <input\n              type=\"radio\"\n              data-testid=\"name-search-radio\"\n              id=\"radioSearch-name\"\n              className=\"radio\"\n              name=\"radioSearch\"\n              onChange={ handleChange }\n              value=\"name\"\n            />\n            Nome\n          </label>\n          <label htmlFor=\"radioSearch\">\n            <input\n              type=\"radio\"\n              data-testid=\"first-letter-search-radio\"\n              id=\"radioSearch\"\n              className=\"radio\"\n              name=\"radioSearch\"\n              onChange={ handleChange }\n              value=\"firstLetter\"\n            />\n            Primeira letra\n          </label>\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          className=\"button-filter\"\n          onClick={ recipesSearch }\n        >\n          Buscar\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport iconProfile from '../images/profileIcon.svg';\nimport iconSearch from '../images/searchIcon.svg';\nimport './header.css';\n\nconst showSearchBar = {\n  show: false,\n};\n\nfunction Header({ titlePage, btSearch = false }) {\n  // titlePage => será to titulo a ser mostrado no Header\n  // btSearch => booleano, se true, mostrará o icone de pesquisa\n  const [state, setState] = useState({ showSearchBar });\n  const { show } = state;\n  return (\n    <header>\n      <div className=\"header\">\n        <Link to=\"/perfil\" data-testid=\"profile-top-btn\" src={ iconProfile }>\n          <img\n            className=\"header-icon\"\n            src={ iconProfile }\n            alt=\"icone do perfil\"\n          />\n        </Link>\n        <h3 data-testid=\"page-title\">{titlePage}</h3>\n        <div className=\"header-buttons\">\n          { btSearch && (\n            <button\n              type=\"button\"\n              data-testid=\"search-top-btn\"\n              onClick={ () => setState({ show: (!show) }) }\n              src={ iconSearch }\n            >\n              <img\n                className=\"header-icon\"\n                src={ iconSearch }\n                alt=\"Icone de pesquisa\"\n              />\n            </button>) }\n        </div>\n      </div>\n      {show && <SearchBar />}\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  titlePage: PropTypes.string.isRequired,\n  btSearch: PropTypes.bool.isRequired,\n};\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport iconDrink from '../images/drinkIcon.svg';\nimport iconExplore from '../images/exploreIcon.svg';\nimport iconFood from '../images/mealIcon.svg';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer data-testid=\"footer\">\n      <div className=\"footer\">\n        <Link to=\"/bebidas\">\n          <button\n            className=\"footer-buttons\"\n            type=\"button\"\n            data-testid=\"drinks-bottom-btn\"\n            src={ iconDrink }\n          >\n            <img\n              className=\"footer-icon\"\n              src={ iconDrink }\n              alt=\"icone de bebida\"\n            />\n          </button>\n        </Link>\n        <Link to=\"/explorar\">\n          <button\n            className=\"footer-buttons\"\n            type=\"button\"\n            data-testid=\"explore-bottom-btn\"\n            src={ iconExplore }\n          >\n            <img\n              className=\"footer-icon\"\n              src={ iconExplore }\n              alt=\"Icone de explorar\"\n            />\n          </button>\n        </Link>\n        <Link to=\"/comidas\">\n          <button\n            className=\"footer-buttons\"\n            type=\"button\"\n            data-testid=\"food-bottom-btn\"\n            src={ iconFood }\n          >\n            <img\n              className=\"footer-icon\"\n              src={ iconFood }\n              alt=\"Icone de comida\"\n            />\n          </button>\n        </Link>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nfunction Explore() {\n  const [redirectTo, setRedirectTo] = useState({ foods: false, drinks: false });\n\n  const handleClick = ({ target }) => {\n    setRedirectTo({ [target.name]: true });\n  };\n\n  if (redirectTo.foods === true) {\n    return <Redirect to=\"/explorar/comidas\" />;\n  } if (redirectTo.drinks === true) {\n    return <Redirect to=\"/explorar/bebidas\" />;\n  }\n  return (\n    <>\n      <Header titlePage=\" Explorar \" />\n      <div className=\"container-buttons\">\n        <button\n          type=\"button\"\n          name=\"foods\"\n          data-testid=\"explore-food\"\n          className=\"button-general\"\n          onClick={ handleClick }\n        >\n          Explorar Comidas\n        </button>\n        <button\n          type=\"button\"\n          name=\"drinks\"\n          data-testid=\"explore-drinks\"\n          className=\"button-general\"\n          onClick={ handleClick }\n        >\n          Explorar Bebidas\n        </button>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Explore;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst useRandom = () => {\n  const [id, setId] = useState('');\n  const { pathname } = useLocation();\n  const foodApi = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const drinkApi = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\n  useEffect(() => {\n    if (pathname === '/explorar/comidas') {\n      const generateId = async () => {\n        const randomRecipe = await fetch(foodApi).then((response) => response.json());\n        setId(randomRecipe.meals[0].idMeal);\n        console.log(randomRecipe.meals[0].idMeal);\n      };\n      generateId();\n    }\n    if (pathname === '/explorar/bebidas') {\n      const generateId = async () => {\n        const randomRecipe = await fetch(drinkApi)\n          .then((response) => response.json());\n        setId(randomRecipe.drinks[0].idDrink);\n        console.log(randomRecipe.drinks[0].idDrink);\n      };\n      generateId();\n    }\n  }, [pathname, setId]);\n\n  return [id, setId];\n};\n\nexport default useRandom;\n","import React, { useState } from 'react';\nimport { Redirect, useLocation, Link } from 'react-router-dom';\nimport useRandom from '../hooks/useRandom';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nfunction ExploreDrinksAndFoods() {\n  const { pathname } = useLocation();\n  const [redirectTo, setRedirectTo] = useState({\n    ingredients: false,\n    surprise: false });\n  const [id] = useRandom();\n  let pag = 'Explorar Comidas';\n\n  if (pathname === '/explorar/bebidas') {\n    pag = 'Explorar Bebidas';\n  }\n\n  const handleClick = ({ target }) => {\n    setRedirectTo({ ...redirectTo, [target.name]: true });\n  };\n\n  const handleSurpriseClick = () => {\n    if (id !== '') {\n      setRedirectTo({ ...redirectTo, surprise: true });\n    }\n  };\n\n  if (pathname === '/explorar/comidas') {\n    if (redirectTo.ingredients === true) {\n      return <Redirect to=\"/explorar/comidas/ingredientes\" />;\n    }\n    if (redirectTo.surprise === true) {\n      return <Redirect to={ `/comidas/${id}` } />;\n    }\n    return (\n      <div className=\"page\">\n        <Header titlePage={ pag } />\n        <div className=\"container-buttons\">\n          <button\n            type=\"button\"\n            name=\"ingredients\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button-general\"\n            onClick={ handleClick }\n          >\n            Por Ingredientes\n          </button>\n          <Link to=\"/explorar/comidas/area\">\n            <button\n              type=\"button\"\n              name=\"area\"\n              data-testid=\"explore-by-area\"\n              className=\"button-general\"\n            >\n              Por Local de Origem\n            </button>\n          </Link>\n          <button\n            type=\"button\"\n            name=\"surprise\"\n            data-testid=\"explore-surprise\"\n            className=\"button-general\"\n            onClick={ handleSurpriseClick }\n          >\n            Me Surpreenda!\n          </button>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  if (pathname === '/explorar/bebidas') {\n    if (redirectTo.ingredients === true) {\n      return <Redirect to=\"/explorar/bebidas/ingredientes\" />;\n    }\n    if (redirectTo.surprise === true) {\n      return <Redirect to={ `/bebidas/${id}` } />;\n    }\n    return (\n      <div className=\"page\">\n        <Header titlePage={ pag } />\n        <div className=\"container-buttons\">\n          <button\n            type=\"button\"\n            name=\"ingredients\"\n            data-testid=\"explore-by-ingredient\"\n            className=\"button-general\"\n            variant=\"link\"\n            onClick={ handleClick }\n          >\n            Por Ingredientes\n          </button>\n          <button\n            type=\"button\"\n            name=\"surprise\"\n            data-testid=\"explore-surprise\"\n            className=\"button-general\"\n            variant=\"link\"\n            onClick={ handleSurpriseClick }\n          >\n            Me Surpreenda!\n          </button>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ExploreDrinksAndFoods;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport AppContext from '../Context/AppContext';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nfunction ExploreDrinksAndFoodsByIngredients() {\n  const [ingredients, setIngredients] = useState([]);\n  const { pathname } = useLocation();\n  const { setIngredientFilter, setFoodOrDrink } = useContext(AppContext);\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    if (pathname === '/explorar/comidas/ingredientes') {\n      const api = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\n      const result = async () => {\n        const data = await fetch(api).then((response) => response.json());\n        setIngredients(data.meals);\n      };\n      result();\n    }\n    if (pathname === '/explorar/bebidas/ingredientes') {\n      const api = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\n      const result = async () => {\n        const data = await fetch(api).then((response) => response.json());\n        setIngredients(data.drinks);\n      };\n      result();\n    }\n  }, [pathname]);\n\n  const handleClickComidas = (ingredient) => {\n    setIngredientFilter(ingredient);\n    setFoodOrDrink('food');\n    setRedirect(true);\n  };\n\n  const handleClickBebidas = async (ingredient) => {\n    setIngredientFilter(ingredient);\n    setFoodOrDrink('drink');\n    setRedirect(true);\n  };\n\n  if (ingredients.length !== 0) {\n    if (pathname === '/explorar/comidas/ingredientes') {\n      if (redirect === true) {\n        return <Redirect to=\"/comidas\" />;\n      }\n      const number = 12;\n      return (\n        <div>\n          <Header titlePage=\"Explorar Ingredientes\" />\n          <div className=\"header-space\"> </div>\n          <div className=\"container-cards\">\n            { ingredients.filter((ingredient) => ingredients.indexOf(ingredient) < number)\n              .map((ingredient, index) => (\n                <button\n                  data-testid={ `${index}-ingredient-card` }\n                  className=\"horizontal-card\"\n                  key={ index }\n                  type=\"button\"\n                  onClick={ () => handleClickComidas(ingredient.strIngredient) }\n                >\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    className=\"img-horizontal-card\"\n                    src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n                    alt=\"ingredient ilustration\"\n                  />\n                  <div className=\"horizontal-card-infos\">\n                    <span\n                      data-testid={ `${index}-card-name` }\n                      className=\"name-horizontal-card\"\n                    >\n                      {ingredient.strIngredient}\n                    </span>\n                  </div>\n                </button>\n              ))}\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n    if (pathname === '/explorar/bebidas/ingredientes') {\n      if (redirect === true) {\n        return <Redirect to=\"/bebidas\" />;\n      }\n      const api = 'https://www.thecocktaildb.com/images/ingredients/';\n      const number = 12;\n      return (\n        <div>\n          <Header titlePage=\"Explorar Ingredientes\" />\n          <div className=\"header-space\"> </div>\n          <div className=\"container-cards\">\n            { ingredients.filter((ingredient) => ingredients.indexOf(ingredient) < number)\n              .map((ingredient, index) => (\n                <button\n                  data-testid={ `${index}-ingredient-card` }\n                  className=\"horizontal-card\"\n                  type=\"button\"\n                  key={ index }\n                  onClick={ () => handleClickBebidas(ingredient.strIngredient1) }\n                >\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    className=\"img-horizontal-card\"\n                    src={ `${api}${ingredient.strIngredient1}-Small.png` }\n                    alt=\"ingredient ilustration\"\n                  />\n                  <div className=\"horizontal-card-infos\">\n                    <span\n                      data-testid={ `${index}-card-name` }\n                      className=\"name-horizontal-card\"\n                    >\n                      {ingredient.strIngredient1}\n                    </span>\n                  </div>\n                </button>\n              ))}\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n  }\n  return (\n    <Spinner className=\"loading\" animation=\"border\" role=\"status\">\n      <span className=\"visually-hidden\"> </span>\n    </Spinner>\n  );\n}\n\nexport default ExploreDrinksAndFoodsByIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport '../styles/explore-foods-by-origin.css';\n\nfunction ExploreFoodsByOrigin() {\n  const [foods, setFoods] = useState([1]);\n  const [areas, setAreas] = useState([]);\n  const [area, setArea] = useState('All');\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    const apiAreas = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n    const areasResult = async () => {\n      const { meals } = await fetch(apiAreas).then((response) => response.json());\n      console.log(meals);\n      setAreas(meals);\n    };\n    areasResult();\n  }, [setAreas]);\n\n  useEffect(() => {\n    setFoods([]);\n    if (area === 'All') {\n      const foodsResult = async () => {\n        const foodApi = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n        const { meals } = await fetch(foodApi).then((response) => response.json());\n        setFoods(meals);\n      };\n      foodsResult();\n    } if (area !== 'All') {\n      const api = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`;\n      const foodsResult = async () => {\n        const { meals } = await fetch(api).then((response) => response.json());\n        setFoods(meals);\n      };\n      foodsResult();\n    }\n  }, [area, setFoods]);\n\n  const handleChange = ({ target }) => {\n    setArea(target.value);\n  };\n\n  const getId = (foodId) => {\n    setId(foodId);\n  };\n  if (id !== '') {\n    return <Redirect to={ `/comidas/${id}` } />;\n  }\n  if (foods.length === 0 || areas.length === 0) {\n    return (\n      <Spinner className=\"loading\" animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\"> </span>\n      </Spinner>\n    );\n  }\n  return (\n    <div>\n      <Header titlePage=\"Explorar Origem\" btSearch />\n      <div className=\"header-space\"> </div>\n      <div className=\"explore-origin\">\n        <select data-testid=\"explore-by-area-dropdown\" onChange={ handleChange }>\n          {areas.map((ar) => (\n            <option\n              key={ ar.strArea }\n              value={ ar.strArea }\n              data-testid={ `${ar.strArea}-option` }\n            >\n              {ar.strArea}\n            </option>\n          ))}\n          <option\n            value=\"All\"\n            data-testid=\"All-option\"\n            onChange={ handleChange }\n          >\n            All\n          </option>\n        </select>\n        <section className=\"container-cards\">\n          { foods.map((item, index) => {\n            const numCards = 12;\n            if (index < numCards) {\n              return (\n                <button\n                  data-testid={ `${index}-recipe-card` }\n                  key={ index }\n                  type=\"button\"\n                  className=\"horizontal-card\"\n                  onClick={ () => getId(item.idMeal) }\n                >\n                  <img\n                    data-testid={ `${index}-card-img` }\n                    className=\"img-horizontal-card\"\n                    src={ item.strMealThumb }\n                    alt={ item.strMeal }\n                  />\n                  <div className=\"horizontal-card-infos\">\n                    <span\n                      data-testid={ `${index}-card-name` }\n                      className=\"name-horizontal-card\"\n                    >\n                      { item.strMeal }\n                    </span>\n                  </div>\n                </button>\n              );\n            }\n            return null;\n          }) }\n        </section>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsByOrigin;\n","export async function getMealByID(ID) {\n  const endpoint = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${ID}`;\n  const { meals } = await fetch(endpoint).then((data) => data.json());\n  return (meals[0]);\n}\n\nexport async function fetchMeals() {\n  const ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const { meals } = await fetch(ENDPOINT).then((response) => response.json());\n  return meals;\n}\n\nexport async function fetchMealsCategories() {\n  const ENDPOINT = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const { meals } = await fetch(ENDPOINT).then((response) => response.json());\n  return meals;\n}\n\nexport async function fetchMealsCategory(category) {\n  const ENDPOINT = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n  const { meals } = await fetch(ENDPOINT).then((response) => response.json());\n  return meals;\n}\n","export async function getCocktailByID(ID) {\n  const endpoint = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${ID}`;\n  const { drinks } = await fetch(endpoint).then((data) => data.json());\n  return (drinks[0]);\n}\n\nexport async function fetchCocktails() {\n  const ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  const { drinks } = await fetch(ENDPOINT).then((response) => response.json());\n  return drinks;\n}\n\nexport async function fetchCocktailsCategories() {\n  const ENDPOINT = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  const { drinks } = await fetch(ENDPOINT).then((response) => response.json());\n  return drinks;\n}\n\nexport async function fetchCocktailsCategory(category) {\n  const ENDPOINT = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n  const { drinks } = await fetch(ENDPOINT).then((response) => response.json());\n  return drinks;\n}\n","import { useState, useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AppContext from '../Context/AppContext';\nimport { fetchMealsCategory } from '../Services/fetchMeals';\nimport { fetchCocktailsCategory } from '../Services/fetchCocktails';\n\nfunction useFilter() {\n  const { globalState } = useContext(AppContext);\n  const { meals, drinks } = globalState;\n  const { pathname } = useLocation();\n  const [filter, setFilter] = useState('All');\n  const [category, setCategory] = useState([]);\n\n  useEffect(() => {\n    const filters = async () => {\n      const numCards = 12;\n      let itemsFiltered = [];\n\n      if (pathname === '/comidas') {\n        itemsFiltered = [...meals].slice(0, numCards);\n        if (filter !== 'All') {\n          itemsFiltered = await fetchMealsCategory(filter);\n          itemsFiltered = itemsFiltered.slice(0, numCards);\n        }\n      } else {\n        itemsFiltered = [...drinks].slice(0, numCards);\n        if (filter !== 'All') {\n          itemsFiltered = await fetchCocktailsCategory(filter);\n          itemsFiltered = itemsFiltered.slice(0, numCards);\n        }\n      }\n      setCategory(itemsFiltered);\n    };\n    filters();\n  }, [filter, meals, drinks, pathname]);\n\n  return {\n    filter,\n    setFilter,\n    category,\n    setCategory,\n  };\n}\n\nexport default useFilter;\n","import { useEffect, useContext, useState } from 'react';\nimport AppContext from '../Context/AppContext';\n\nconst useFilterIngredient = () => {\n  const [itemsByIngredient, setItemsByIngredient] = useState([]);\n  const { globalState } = useContext(AppContext);\n  const { foodOrDrink, ingredientFilter } = globalState;\n\n  useEffect(() => {\n    const numCards = 12;\n    let itemsFiltered = [];\n    if (ingredientFilter !== '') {\n      if (foodOrDrink === 'food') {\n        const api = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\n        const result = async () => {\n          const data = await fetch(`${api}${ingredientFilter}`)\n            .then((response) => response.json());\n          itemsFiltered = data.meals;\n          itemsFiltered = itemsFiltered.slice(0, numCards);\n          setItemsByIngredient(itemsFiltered);\n        };\n        result();\n      }\n      if (foodOrDrink === 'drink') {\n        const api = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n        const result = async () => {\n          const data = await fetch(`${api}${ingredientFilter}`)\n            .then((response) => response.json());\n          itemsFiltered = data.drinks;\n          itemsFiltered = itemsFiltered.slice(0, numCards);\n          setItemsByIngredient(itemsFiltered);\n        };\n        result();\n      }\n    }\n  }, [ingredientFilter, foodOrDrink]);\n  return { itemsByIngredient, setItemsByIngredient };\n};\n\nexport default useFilterIngredient;\n","import React, { useContext, useState, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport AppContext from '../Context/AppContext';\nimport useFilter from '../hooks/useFilter';\nimport useFilterIngredient from '../hooks/useFilterIngredient';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\nimport '../styles/foods-drinks.css';\n\nfunction FoodsAndDrinks() {\n  const { globalState, setLoadSearch } = useContext(AppContext);\n  const { meals, drinks, mealsCategories, drinksCategories,\n    loadSearch, search } = globalState;\n  const { pathname } = useLocation();\n  const { filter, setFilter, category, setCategory } = useFilter();\n  const { itemsByIngredient, setItemsByIngredient } = useFilterIngredient();\n  const [redirect, setRedirect] = useState(false);\n  const [id, setId] = useState('');\n  const numButtons = 5;\n  let type = 'Meal';\n  let cards = meals;\n  let buttons = mealsCategories;\n  let pag = 'Comidas';\n\n  useEffect(() => {\n    if (itemsByIngredient.length !== 0) {\n      setCategory(itemsByIngredient);\n      setItemsByIngredient([]);\n    }\n  }, [itemsByIngredient, setCategory, setItemsByIngredient]);\n\n  if (pathname === '/bebidas') {\n    type = 'Drink';\n    cards = drinks;\n    buttons = drinksCategories;\n    pag = 'Bebidas';\n  }\n\n  if (!cards.length || !buttons.length) {\n    return (\n      <Spinner className=\"loading\" animation=\"border\" role=\"status\">\n        <span className=\"visually-hidden\"> </span>\n      </Spinner>\n    );\n  }\n\n  buttons = buttons.slice(0, numButtons);\n\n  const filterCategory = ({ target: { value } }) => {\n    if (filter === value) {\n      setFilter('All');\n    } else {\n      setFilter(value);\n    }\n    setLoadSearch(false);\n  };\n\n  const getButtons = () => {\n    const buttonList = buttons.map(({ strCategory }, index) => (\n      <button\n        data-testid={ `${strCategory}-category-filter` }\n        className=\"button-filter\"\n        type=\"button\"\n        key={ index }\n        variant=\"secondary\"\n        value={ strCategory }\n        onClick={ filterCategory }\n      >\n        { `${strCategory}` }\n      </button>\n    ));\n    return buttonList;\n  };\n\n  const redirectToRecipe = async (idCard) => {\n    await setId(idCard);\n    await setRedirect(true);\n  };\n\n  const fillCards = () => {\n    let cardList = loadSearch ? search : category;\n\n    if (!category.length) return <span>Nenhum resultado encontrado</span>;\n\n    cardList = cardList.map((item, index) => (\n      <button\n        data-testid={ `${index}-recipe-card` }\n        type=\"button\"\n        key={ index }\n        className=\"horizontal-card\"\n        onClick={ () => redirectToRecipe(item[`id${type}`]) }\n      >\n        <img\n          data-testid={ `${index}-card-img` }\n          className=\"img-horizontal-card\"\n          alt={ item[`str${type}`] }\n          src={ item[`str${type}Thumb`] }\n        />\n        <div className=\"horizontal-card-infos\">\n          <span\n            data-testid={ `${index}-card-name` }\n            className=\"name-horizontal-card\"\n          >\n            { item[`str${type}`] }\n          </span>\n        </div>\n      </button>\n    ));\n    return cardList;\n  };\n\n  return (\n    <div className=\"pag-foods-drinks\">\n      <Header titlePage={ pag } btSearch />\n      { redirect && <Redirect to={ `${pathname}/${id}` } /> }\n      <section className=\"container-button-filter\">\n        <button\n          data-testid=\"All-category-filter\"\n          className=\"button-filter\"\n          type=\"button\"\n          variant=\"secondary\"\n          value=\"All\"\n          onClick={ filterCategory }\n        >\n          All\n        </button>\n        { getButtons() }\n      </section>\n      <section className=\"container-cards\">\n        { fillCards() }\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FoodsAndDrinks;\n","import React, { useState, useContext, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from '../Context/AppContext';\n\nimport Logo from '../images/logoreceitapp.png';\n\nfunction Login() {\n  const { setUserEmail } = useContext(AppContext);\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formValidation, setFormValidation] = useState(true);\n  const [redirectValidation, setRedirectValidation] = useState(false);\n\n  useEffect(() => {\n    const handleValidation = () => {\n      const length = 6;\n      const emailDefault = /^(.*)@(.*)[.](com)$/;\n      let emailValidation = false;\n      let passwordValidation = false;\n\n      if (password.length > length) {\n        passwordValidation = true;\n      }\n      if (emailDefault.test(email)) {\n        emailValidation = true;\n      }\n      if (passwordValidation && emailValidation) {\n        setFormValidation(false);\n      }\n    };\n    handleValidation();\n  }, [email, password]);\n\n  const handleSubmit = () => {\n    setUserEmail(email);\n\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    setRedirectValidation(true);\n  };\n\n  return (\n    <section className=\"login-page\">\n      { redirectValidation && <Redirect to=\"/comidas\" /> }\n      <img src={ Logo } alt=\"Logo do ReceitaApp\" />\n      <Form className=\"login\">\n        <Form.Group className=\"mb-1\" controlId=\"formBasicEmail\">\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            onChange={ (event) => setMail(event.target.value) }\n            data-testid=\"email-input\"\n          />\n          <Form.Text className=\"text-muted\" />\n        </Form.Group>\n\n        <Form.Group className=\"mb-2\" controlId=\"formBasicPassword\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={ (event) => setPassword(event.target.value) }\n            data-testid=\"password-input\"\n          />\n        </Form.Group>\n        <Button\n          className=\"mb-3\"\n          variant=\"primary\"\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ formValidation }\n          onClick={ handleSubmit }\n        >\n          Entrar\n        </Button>\n      </Form>\n    </section>\n  );\n}\n\nexport default Login;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction useFilterMadeAndFavorite() {\n  const [madeRecipes, setMadeRecipes] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [recipes, setRecipes] = useState([]);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    const savedRecipes = async () => {\n      let saved = [];\n      if (pathname === '/receitas-feitas') {\n        saved = await JSON.parse(localStorage.getItem('doneRecipes'));\n        await setRecipes(saved);\n      } else {\n        saved = await JSON.parse(localStorage.getItem('favoriteRecipes'));\n        await setRecipes(saved);\n      }\n    };\n    savedRecipes();\n  }, [pathname]);\n\n  useEffect(() => {\n    const filters = async () => {\n      if (recipes !== null) {\n        let cardsFiltered = [...recipes];\n        if (filter !== 'all') {\n          cardsFiltered = cardsFiltered.filter(({ type }) => type === filter);\n        }\n        setMadeRecipes(cardsFiltered);\n      } else {\n        setMadeRecipes([]);\n      }\n    };\n    filters();\n  }, [filter, recipes]);\n\n  return {\n    madeRecipes,\n    filter,\n    setFilter,\n    setRecipes,\n  };\n}\n\nexport default useFilterMadeAndFavorite;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport share from '../images/shareIcon.svg';\n\nfunction CardMade(props) {\n  const { recipe, index, copyPath, copyMessage, shareId } = props;\n  const { id, type, name, image, area, category,\n    doneDate, tags, alcoholicOrNot } = recipe;\n  const urlDetails = `/${type}s/${id}`;\n\n  if (type === 'comida') {\n    return (\n      <div key={ index } className=\"card-made-favorite\">\n        <Link to={ urlDetails }>\n          <img\n            data-testid={ `${index}-horizontal-image` }\n            className=\"img-card\"\n            src={ image }\n            alt={ name }\n          />\n        </Link>\n        <div className=\"card-infos\">\n          <div className=\"card-done-share\">\n            <span\n              data-testid={ `${index}-horizontal-top-text` }\n              className=\"card-category\"\n            >\n              { `${area} - ${category}` }\n            </span>\n            <input\n              data-testid={ `${index}-horizontal-share-btn` }\n              className=\"icon-share\"\n              type=\"image\"\n              src={ share }\n              alt=\"Compartilhar\"\n              onClick={ () => copyPath(urlDetails, id) }\n            />\n            { shareId === id\n              && <span style={ { display: copyMessage } }>Link copiado!</span> }\n          </div>\n          <Link\n            data-testid={ `${index}-horizontal-name` }\n            className=\"recipe-name\"\n            to={ `/${type}s/${id}` }\n          >\n            { name }\n          </Link>\n          <div className=\"card-done-tags\">\n            { tags.map((tag) => (\n              <div\n                data-testid={ `${index}-${tag}-horizontal-tag` }\n                className=\"card-tag\"\n                key={ tag }\n              >\n                { tag }\n              </div>\n            ))}\n          </div>\n          <span\n            className=\"card-data\"\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            { doneDate }\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div key={ index } className=\"card-made-favorite\">\n      <Link to={ urlDetails }>\n        <img\n          data-testid={ `${index}-horizontal-image` }\n          className=\"img-card\"\n          src={ image }\n          alt={ name }\n        />\n      </Link>\n      <div className=\"card-infos\">\n        <div className=\"card-done-share\">\n          <span\n            data-testid={ `${index}-horizontal-top-text` }\n            className=\"card-category\"\n          >\n            { alcoholicOrNot }\n          </span>\n          <input\n            data-testid={ `${index}-horizontal-share-btn` }\n            className=\"icon-share\"\n            type=\"image\"\n            src={ share }\n            alt=\"Compartilhar\"\n            onClick={ () => copyPath(urlDetails, id) }\n          />\n          { shareId === id\n            && <span style={ { display: copyMessage } }>Link copiado!</span> }\n        </div>\n        <Link\n          data-testid={ `${index}-horizontal-name` }\n          className=\"recipe-name\"\n          to={ `/${type}s/${id}` }\n        >\n          { name }\n        </Link>\n        <span\n          className=\"card-data\"\n          data-testid={ `${index}-horizontal-done-date` }\n        >\n          { doneDate }\n        </span>\n      </div>\n    </div>\n  );\n}\n\nCardMade.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    image: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n    doneDate: PropTypes.string,\n    tags: PropTypes.arrayOf(String),\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  copyPath: PropTypes.func.isRequired,\n  copyMessage: PropTypes.string.isRequired,\n  shareId: PropTypes.number.isRequired,\n};\n\nexport default CardMade;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport share from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction CardFavorite(props) {\n  const { recipe, index, copyPath, copyMessage, shareId, deleteFavorite } = props;\n  const { id, type, name, image, area, category,\n    alcoholicOrNot } = recipe;\n  const urlDetails = `/${type}s/${id}`;\n\n  if (type === 'comida') {\n    return (\n      <div key={ index } className=\"card-made-favorite\">\n        <Link to={ urlDetails }>\n          <img\n            data-testid={ `${index}-horizontal-image` }\n            className=\"img-card\"\n            src={ image }\n            alt={ name }\n          />\n        </Link>\n        <div className=\"card-infos\">\n          <span\n            data-testid={ `${index}-horizontal-top-text` }\n            className=\"card-category\"\n          >\n            { `${area} - ${category}` }\n          </span>\n          <Link\n            data-testid={ `${index}-horizontal-name` }\n            className=\"recipe-name\"\n            to={ `/${type}s/${id}` }\n          >\n            { name }\n          </Link>\n          <div className=\"card-favorite-share\">\n            { shareId === id\n                && <span style={ { display: copyMessage } }>Link copiado!</span> }\n            <input\n              data-testid={ `${index}-horizontal-share-btn` }\n              className=\"icon-share\"\n              type=\"image\"\n              src={ share }\n              alt=\"Compartilhar\"\n              onClick={ () => copyPath(urlDetails, id) }\n            />\n            <input\n              data-testid={ `${index}-horizontal-favorite-btn` }\n              className=\"icon-favorite\"\n              type=\"image\"\n              src={ blackHeartIcon }\n              alt=\"Favorite\"\n              onClick={ () => deleteFavorite(id) }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div key={ index } className=\"card-made-favorite\">\n      <Link to={ urlDetails }>\n        <img\n          data-testid={ `${index}-horizontal-image` }\n          className=\"img-card\"\n          src={ image }\n          alt={ name }\n        />\n      </Link>\n      <div className=\"card-infos\">\n        <span\n          data-testid={ `${index}-horizontal-top-text` }\n          className=\"card-category\"\n        >\n          { alcoholicOrNot }\n        </span>\n        <Link\n          data-testid={ `${index}-horizontal-name` }\n          className=\"recipe-name\"\n          to={ `/${type}s/${id}` }\n        >\n          { name }\n        </Link>\n        <div className=\"card-favorite-share\">\n          { shareId === id\n              && <span style={ { display: copyMessage } }>Link copiado!</span> }\n          <input\n            data-testid={ `${index}-horizontal-share-btn` }\n            className=\"icon-share\"\n            type=\"image\"\n            src={ share }\n            alt=\"Compartilhar\"\n            onClick={ () => copyPath(urlDetails, id) }\n          />\n          <input\n            data-testid={ `${index}-horizontal-favorite-btn` }\n            className=\"icon-favorite\"\n            type=\"image\"\n            src={ blackHeartIcon }\n            alt=\"Favorite\"\n            onClick={ () => deleteFavorite(id) }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCardFavorite.propTypes = {\n  recipe: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    image: PropTypes.string,\n    area: PropTypes.string,\n    category: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  copyPath: PropTypes.func.isRequired,\n  copyMessage: PropTypes.string.isRequired,\n  shareId: PropTypes.number.isRequired,\n  deleteFavorite: PropTypes.func.isRequired,\n};\n\nexport default CardFavorite;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport useFilterMadeAndFavorite from '../hooks/useFilterMadeAndFavorite';\nimport CardMade from '../Components/CardMade';\nimport CardFavorite from '../Components/CardFavorite';\nimport Header from '../Components/Header';\nimport '../styles/made-favorite-recipes.css';\n\nfunction MadeAndFavoriteRecipes() {\n  const { madeRecipes, filter, setFilter, setRecipes } = useFilterMadeAndFavorite();\n  const { pathname } = useLocation();\n  const [copyMessage, setCopyMessage] = useState('none');\n  const [shareId, setShareId] = useState('');\n  const types = ['all', 'food', 'drink', 'All', 'Food', 'Drinks'];\n  const numButtons = 3;\n  let pag = 'Receitas Feitas';\n\n  if (pathname === '/receitas-favoritas') {\n    pag = 'Receitas Favoritas';\n  }\n\n  const filterType = ({ target: { value } }) => {\n    const type = {\n      all: 'all',\n      food: 'comida',\n      drink: 'bebida',\n    };\n\n    if (filter === type[value]) {\n      setFilter('all');\n    } else {\n      setFilter(type[value]);\n    }\n  };\n\n  const deleteFavorite = async (id) => {\n    let recipes = await JSON.parse(localStorage.getItem('favoriteRecipes'));\n    recipes = recipes.filter((recipe) => recipe.id !== id);\n    await localStorage.setItem('favoriteRecipes', JSON.stringify(recipes));\n    setRecipes(recipes);\n  };\n\n  const copyPath = (urlDetails, id) => {\n    copy(`http://localhost:3000${urlDetails}`);\n    setShareId(id);\n    setCopyMessage('block');\n  };\n\n  const fillCards = () => {\n    if (!madeRecipes) return <span>Nenhuma receita feita</span>;\n\n    return madeRecipes.map((recipe, index) => {\n      if (pathname === '/receitas-feitas') {\n        return (\n          <CardMade\n            key={ index }\n            recipe={ recipe }\n            index={ index }\n            copyPath={ copyPath }\n            copyMessage={ copyMessage }\n            shareId={ shareId }\n          />\n        );\n      }\n\n      return (\n        <CardFavorite\n          key={ index }\n          recipe={ recipe }\n          index={ index }\n          copyPath={ copyPath }\n          copyMessage={ copyMessage }\n          shareId={ shareId }\n          deleteFavorite={ deleteFavorite }\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"pag-made-favorite\">\n      <Header titlePage={ pag } />\n      <section className=\"container-button-filter\">\n        { types.slice(0, numButtons).map((item, index) => (\n          <button\n            data-testid={ `filter-by-${item}-btn` }\n            className=\"button-filter\"\n            type=\"button\"\n            key={ item }\n            variant=\"primary\"\n            value={ item }\n            onClick={ filterType }\n          >\n            { types[index + numButtons] }\n          </button>\n        )) }\n      </section>\n      <section className=\"container-cards\">\n        { fillCards() }\n      </section>\n    </div>\n  );\n}\n\nexport default MadeAndFavoriteRecipes;\n","import React from 'react';\n\nfunction NotFound() {\n  return <span>Not Found</span>;\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Header from '../Components/Header';\nimport Footer from '../Components/Footer';\n\nfunction Profile() {\n  const mailUser = JSON.parse(localStorage.getItem('user'));\n  let getUser = '';\n  if (mailUser) {\n    getUser = mailUser.email;\n  }\n  return (\n    <section className=\"profile-page\">\n      <Header titlePage=\" Perfil \" />\n      <p className=\"profile-card\" />\n      <p className=\"profile\">Meu Perfil</p>\n      <p data-testid=\"profile-email\" className=\"email\">{ getUser }</p>\n      <Form>\n        <Link to=\"/receitas-feitas\">\n          <Button\n            className=\"btn-done\"\n            variant=\"primary\"\n            type=\"button\"\n            data-testid=\"profile-done-btn\"\n          >\n            Receitas Feitas\n          </Button>\n        </Link>\n        <Link to=\"/receitas-favoritas\">\n          <Button\n            className=\"btn-favorite\"\n            variant=\"primary\"\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n          >\n            Receitas Favoritas\n          </Button>\n        </Link>\n        <Link to=\"/\">\n          <Button\n            className=\"btn-logout\"\n            variant=\"primary\"\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ () => localStorage.clear() }\n          >\n            Sair\n          </Button>\n        </Link>\n      </Form>\n      <Footer />\n    </section>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteButtonIcon({ isFavorite, removeFavorite, newFavorite }) {\n  return (\n    <button\n      onClick={ isFavorite ? () => removeFavorite() : () => newFavorite() }\n      type=\"button\"\n      data-testid=\"favorite-btn\"\n      src={ (isFavorite ? blackHeartIcon : whiteHeartIcon) }\n    >\n      <img\n        src={ (isFavorite ? blackHeartIcon : whiteHeartIcon) }\n        alt=\"Favorite Recipe Action\"\n      />\n    </button>\n  );\n}\n\nFavoriteButtonIcon.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  removeFavorite: PropTypes.func.isRequired,\n  newFavorite: PropTypes.func.isRequired,\n};\n\nexport default FavoriteButtonIcon;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FavoriteButtonIcon from './FavoriteButtonIcon';\n\nfunction RecipeDetailFavoriteButton({ recipe, type, recipeID }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  function verifyFavorite(favorite) {\n    if (favorite) {\n      setIsFavorite(true);\n    }\n  }\n\n  useEffect(() => {\n    const verifyIsFavorite = () => {\n      const favoritesStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (favoritesStorage !== null) {\n        const favorite = favoritesStorage.find((food) => food.id === recipeID);\n        verifyFavorite(favorite);\n      }\n    };\n    verifyIsFavorite();\n  });\n\n  const newFavorite = () => {\n    const favoritesRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const favoriteData = {\n      id: recipeID,\n      type,\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      area: recipe.strArea || '',\n      name: recipe.strDrink || recipe.strMeal,\n      image: recipe.strMealThumb || recipe.strDrinkThumb,\n    };\n\n    let newFavorites = [];\n\n    if (favoritesRecipes !== null) {\n      newFavorites = [...favoritesRecipes, favoriteData];\n    } else {\n      newFavorites = [favoriteData];\n    }\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    setIsFavorite(true);\n  };\n\n  const removeFavorite = () => {\n    const favoritesRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavorites = favoritesRecipes.filter(({ id }) => id !== recipeID);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    setIsFavorite(false);\n  };\n\n  return (\n    <FavoriteButtonIcon\n      isFavorite={ isFavorite }\n      removeFavorite={ removeFavorite }\n      newFavorite={ newFavorite }\n    />\n  );\n}\n\nRecipeDetailFavoriteButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  recipeID: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    id: PropTypes.string,\n    strMeal: PropTypes.string,\n    strDrink: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n    strArea: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strCategory: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecipeDetailFavoriteButton;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'clipboard-copy';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport RecipeDetailFavoriteButton from './RecipeDetailsFavoriteButton';\n\nfunction RecipeDetailHeader({ recipe, type, recipeID }) {\n  const [recipeName, setRecipeName] = useState('');\n  const [recipeCategory, setRecipeCategory] = useState('');\n  const [displaycopymessage, setDisplayCopyMessage] = useState('none');\n  const [recipeType, setRecipeType] = useState('');\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (type === 'food') {\n      setRecipeName(recipe.strMeal);\n      setRecipeType('comida');\n      setUrl('http://localhost:3000/comidas/');\n      setRecipeCategory(recipe.strCategory);\n    } else {\n      setRecipeName(recipe.strDrink);\n      setRecipeType('bebida');\n      setUrl('http://localhost:3000/bebidas/');\n      setRecipeCategory(recipe.strAlcoholic);\n    }\n  }, [type, recipe.strMeal, recipe.strDrink, recipe.strCategory, recipe.strAlcoholic]);\n\n  function copyPath() {\n    copy(`${url}${recipeID}`);\n    setDisplayCopyMessage('block');\n  }\n\n  return (\n    <div className=\"headerContainer\">\n      <div className=\"nameContainer\">\n        <h2 data-testid=\"recipe-title\">{recipeName}</h2>\n        <h4 data-testid=\"recipe-category\">{recipeCategory}</h4>\n      </div>\n      <div className=\"iconsContainer\">\n        <button\n          onClick={ () => copyPath() }\n          type=\"button\"\n          data-testid=\"share-btn\"\n        >\n          <img src={ shareIcon } alt=\"Share Recipe\" />\n        </button>\n        <span style={ { display: displaycopymessage } }>Link copiado!</span>\n        <RecipeDetailFavoriteButton\n          recipe={ recipe }\n          type={ recipeType }\n          recipeID={ recipeID }\n        />\n      </div>\n    </div>\n  );\n}\n\nRecipeDetailHeader.propTypes = {\n  type: PropTypes.string.isRequired,\n  recipeID: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    strMeal: PropTypes.string,\n    strDrink: PropTypes.string,\n    strCategory: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecipeDetailHeader;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RecipeDetailIngredients({ recipe }) {\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [measuresList, setMeasuresList] = useState([]);\n\n  useEffect(() => {\n    const arrayOfIngredientes = (Object.entries(recipe))\n      .filter((key) => key[0].includes('strIngredient'));\n\n    setIngredientsList(arrayOfIngredientes\n      .filter((ingredient) => ingredient[1] !== null\n        && ingredient[1] !== '' && ingredient[1] !== ' '));\n\n    const arrayOfMeasures = (Object.entries(recipe))\n      .filter((key) => key[0].includes('strMeasure'));\n\n    setMeasuresList(arrayOfMeasures\n      .map((measure) => {\n        if (measure[1] === null || measure[1] === '') {\n          return ' ';\n        }\n        return measure[1];\n      }));\n  }, [recipe]);\n\n  return (\n    <div className=\"ingredientsContainer\">\n      <h3>Ingredients</h3>\n      <ul>\n        {ingredientsList.map((ingredient, index) => (\n          <li\n            key={ ingredient[0] }\n            data-testid={ `${index}-ingredient-name-and-measure` }\n          >\n            {`- ${ingredient[1]} - ${measuresList[index]}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nRecipeDetailIngredients.propTypes = {\n  recipe: PropTypes.shape({}).isRequired,\n};\n\nexport default RecipeDetailIngredients;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './RecipeDetailInstructions.css';\n\nfunction RecipeDetailInstructions({ recipe }) {\n  return (\n    <div className=\"instructionsContainer\">\n      <h3>Instructions</h3>\n      <p data-testid=\"instructions\">\n        {recipe.strInstructions}\n      </p>\n    </div>\n  );\n}\n\nRecipeDetailInstructions.propTypes = {\n  recipe: PropTypes.shape({\n    strInstructions: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecipeDetailInstructions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RecipeDetailVideo({ videoSource }) {\n  const [videoID, setVideoID] = useState('');\n\n  useEffect(() => {\n    if (videoSource !== undefined) {\n      setVideoID((videoSource.split('='))[1]);\n    }\n  }, [videoSource]);\n\n  return (\n    <div className=\"videoContainer\">\n      <h3>Video</h3>\n      <iframe\n        data-testid=\"video\"\n        width=\"100%\"\n        src={ `https://www.youtube.com/embed/${videoID}` }\n        frameBorder=\"0\"\n        allow=\"accelerometer;\n        autoplay; clipboard-write;\n        encrypted-media;\n        gyroscope;\n        picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </div>\n  );\n}\n\nRecipeDetailVideo.propTypes = {\n  videoSource: PropTypes.string.isRequired,\n};\n\nexport default RecipeDetailVideo;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card } from 'react-bootstrap';\n\nimport './RecipeDetailsRecomendations.css';\n\nconst SIX = 6;\n\nfunction RecipeDetailsRecomendations({ type }) {\n  const [recomendationList, setRecomendationList] = useState([]);\n\n  useEffect(() => {\n    if (type === 'drink') {\n      const getMealsRecomendations = async () => {\n        const endpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n        const { meals } = await fetch(endpoint).then((data) => data.json());\n        const firstSixMeals = meals.filter((recipe, index) => index < SIX);\n        setRecomendationList(firstSixMeals);\n      };\n      getMealsRecomendations();\n    }\n\n    if (type === 'food') {\n      const getDrinkRecomendations = async () => {\n        const endpoint = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n        const { drinks } = await fetch(endpoint).then((data) => data.json());\n        const firstSixDrinks = drinks.filter((recipe, index) => index < SIX);\n        setRecomendationList(firstSixDrinks);\n      };\n      getDrinkRecomendations();\n    }\n  }, [type]);\n\n  return (\n    <div className=\"recomendationsContainer\">\n      <h3>Recomendações</h3>\n      <div className=\"cardsContainer\">\n        {\n          recomendationList.map((recipe, index) => (\n            <Card key={ index } data-testid={ `${index}-recomendation-card` }>\n              <Card.Img\n                variant=\"top\"\n                src={ (type === 'food' ? recipe.strDrinkThumb : recipe.strMealThumb) }\n              />\n              <Card.Body>\n                <Card.Subtitle className=\"\">\n                  { (type === 'food' ? recipe.strCategory : recipe.strAlcoholic) }\n                </Card.Subtitle>\n                <Card.Title data-testid={ `${index}-recomendation-title` }>\n                  { (type === 'food' ? recipe.strDrink : recipe.strMeal) }\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nRecipeDetailsRecomendations.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecipeDetailsRecomendations;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './RecipeDetailButton.css';\n\nconst defaultInProgresStorage = {\n  cocktails: {},\n  meals: {},\n};\n\nfunction RecipeDetailButton({ type, recipe, recipeID }) {\n  const [recipeStatus, setRecipeStatus] = useState('Start');\n  const { pathname } = useLocation();\n\n  const [ingredientsEMeasuresList, setIngredientsEMeasuresList] = useState([]);\n\n  useEffect(() => {\n    const ingredientsList = (Object.entries(recipe))\n      .filter((key) => key[0].includes('strIngredient'))\n      .filter((ingredient) => ingredient[1] !== null\n      && ingredient[1] !== '' && ingredient[1] !== ' ');\n\n    const measuresList = (Object.entries(recipe))\n      .filter((key) => key[0].includes('strMeasure'))\n      .map((measure) => {\n        if (measure[1] === null || measure[1] === '') {\n          return ' ';\n        }\n        return measure[1];\n      });\n\n    setIngredientsEMeasuresList(ingredientsList\n      .map((ingredient, index) => (\n        {\n          ingredient: `${ingredient[1]} - ${measuresList[index]}`,\n          done: false,\n        }\n      )));\n  }, [recipe]);\n\n  const verifyItsDone = (recipeIsDone) => {\n    if (recipeIsDone) {\n      setRecipeStatus('Finished');\n    }\n  };\n\n  useEffect(() => {\n    const verifyIsInProgress = () => {\n      const inProgressStorage = JSON\n        .parse(localStorage.getItem('inProgressRecipes')) || defaultInProgresStorage;\n      const doneStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n      if (inProgressStorage !== null && inProgressStorage.cocktails[recipeID]) {\n        setRecipeStatus('Continue');\n      } else if (inProgressStorage !== null && inProgressStorage.meals[recipeID]) {\n        setRecipeStatus('Continue');\n      } else if (doneStorage !== null) {\n        const recipeIsDone = doneStorage.find((item) => item.id === recipeID);\n        verifyItsDone(recipeIsDone);\n      }\n    };\n    verifyIsInProgress();\n  }, [recipeID]);\n\n  const startedRecipe = () => {\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (type === 'food') {\n      inProgressStorage.meals = {\n        ...inProgressStorage.meals,\n        [recipeID]: ingredientsEMeasuresList,\n      };\n    } else {\n      inProgressStorage.cocktails = {\n        ...inProgressStorage.cocktails,\n        [recipeID]: ingredientsEMeasuresList,\n      };\n    }\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressStorage));\n  };\n\n  const startButton = () => (\n    <Link to={ `${pathname}/in-progress` }>\n      <Button\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => startedRecipe() }\n        variant=\"success\"\n        className=\"recipeButton\"\n      >\n        Iniciar Receita\n      </Button>\n    </Link>\n  );\n\n  const continueButton = () => (\n    <Link to={ `${pathname}/in-progress` }>\n      <Button\n        className=\"recipeButton\"\n        data-testid=\"start-recipe-btn\"\n        variant=\"success\"\n      >\n        Continuar Receita\n      </Button>\n    </Link>\n  );\n\n  return (\n    <div className=\"recipeButtonContainer\">\n      {\n        recipeStatus === 'Start'\n        && recipeStatus !== 'Finished'\n        && startButton()\n      }\n      {\n        recipeStatus === 'Continue'\n        && continueButton()\n      }\n    </div>\n  );\n}\n\nRecipeDetailButton.propTypes = {\n  recipeID: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({}).isRequired,\n};\n\nexport default RecipeDetailButton;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getCocktailByID } from '../Services/fetchCocktails';\nimport { getMealByID } from '../Services/fetchMeals';\n\nimport RecipeDetailHeader from '../Components/RecipeDetailHeader';\nimport RecipeDetailIngredients from '../Components/RecipeDetailIngredients';\nimport RecipeDetailInstructions from '../Components/RecipeDetailInstructions';\nimport RecipeDetailVideo from '../Components/RecipeDetailVideo';\nimport RecipeDetailsRecomendations from '../Components/RecipeDetailsRecomendations';\nimport RecipeDetailButton from '../Components/RecipeDetailButton';\n\nimport './RecipesDetails.css';\n\nfunction RecipesDetails({ type }) {\n  const [recipe, setRecipe] = useState({});\n  const { recipeID } = useParams();\n\n  useEffect(() => {\n    if (type === 'food') {\n      getMealByID(recipeID).then((data) => setRecipe(data));\n    }\n\n    if (type === 'drink') {\n      getCocktailByID(recipeID).then((data) => setRecipe(data));\n    }\n\n    const favoritesStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoritesStorage === null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n\n    const doneStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneStorage === null) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgressStorage === null) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: {},\n      }));\n    }\n  }, [type, recipeID]);\n\n  if (recipe !== {}) {\n    return (\n      <div className=\"recipeDetails\">\n        <img\n          src={ recipe.strMealThumb || recipe.strDrinkThumb }\n          alt=\"Recipe\"\n          data-testid=\"recipe-photo\"\n          className=\"recipeDetailImage\"\n        />\n        <div className=\"infoContainer\">\n          <RecipeDetailHeader type={ type } recipe={ recipe } recipeID={ recipeID } />\n          <RecipeDetailIngredients recipe={ recipe } />\n          <RecipeDetailInstructions recipe={ recipe } />\n          {(type === 'food') && <RecipeDetailVideo videoSource={ recipe.strYoutube } />}\n          <RecipeDetailsRecomendations type={ type } />\n          <RecipeDetailButton type={ type } recipe={ recipe } recipeID={ recipeID } />\n        </div>\n      </div>\n    );\n  }\n\n  return (<div>Carregando...</div>);\n}\n\nRecipesDetails.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecipesDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './RecipeInProgressCheckBox.css';\n\nfunction RecipeInProgressCheckBox({ isChecked, ingredient, index, changeChecked }) {\n  const [checkState, setCheckState] = useState(isChecked);\n\n  const handleCheck = (currentIndex) => {\n    setCheckState(!checkState);\n    changeChecked(currentIndex);\n  };\n\n  return (\n    <label\n      className={ checkState ? 'checked' : 'notChecked' }\n      htmlFor={ `${ingredient}-checkbox` }\n    >\n      <input\n        id={ `${ingredient}-checkbox` }\n        type=\"checkbox\"\n        checked={ checkState ? 'checked' : false }\n        onChange={ () => handleCheck(index) }\n      />\n      {ingredient}\n    </label>\n  );\n}\n\nRecipeInProgressCheckBox.propTypes = {\n  isChecked: PropTypes.bool.isRequired,\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  changeChecked: PropTypes.func.isRequired,\n};\n\nexport default RecipeInProgressCheckBox;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../Context/AppContext';\n\nimport RecipeInProgressCheckBox from './RecipeInProgressCheckBox';\n\nconst defaultInProgresStorage = {\n  cocktails: {},\n  meals: {},\n};\n\nfunction RecipeInProgressIngredients({ ingredientList, type, recipeID }) {\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const { setMadeRecipe } = useContext(AppContext);\n\n  const verifyItsDone = (element) => element.done === true;\n\n  useEffect(() => {\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgressStorage === null) {\n      setIngredientsList(ingredientList);\n    }\n\n    if (type === 'food'\n    && inProgressStorage !== null) {\n      setIngredientsList(inProgressStorage.meals[recipeID]);\n    } else if (type === 'drink'\n    && inProgressStorage !== null) {\n      setIngredientsList(inProgressStorage.cocktails[recipeID]);\n    }\n  }, [recipeID, type, ingredientList]);\n\n  const changeChecked = (index) => {\n    const newIngredientsList = ingredientsList;\n    newIngredientsList[index].done = !newIngredientsList[index].done;\n    setIngredientsList(newIngredientsList);\n\n    if (ingredientsList.every(verifyItsDone)) {\n      setMadeRecipe(true);\n    } else {\n      setMadeRecipe(false);\n    }\n\n    const inProgressStorage = JSON\n      .parse(localStorage.getItem('inProgressRecipes')) || defaultInProgresStorage;\n    if (type === 'food' && inProgressStorage !== null) {\n      inProgressStorage.meals[recipeID] = ingredientsList;\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressStorage));\n    }\n    if (type === 'drink' && inProgressStorage !== null) {\n      inProgressStorage.cocktails[recipeID] = ingredientsList;\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressStorage));\n    }\n  };\n\n  useEffect(() => {\n    if (ingredientsList !== undefined) {\n      setMadeRecipe(ingredientsList.every(verifyItsDone));\n    }\n  });\n\n  return (\n    <div className=\"ingredientsContainer\">\n      <h3>Ingredients</h3>\n      <ul>\n        {ingredientsList.map((item, index) => (\n          <li\n            key={ item.ingredient }\n            data-testid={ `${index}-ingredient-step` }\n          >\n            <RecipeInProgressCheckBox\n              isChecked={ item.done }\n              ingredient={ item.ingredient }\n              index={ index }\n              changeChecked={ changeChecked }\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nRecipeInProgressIngredients.propTypes = {\n  recipeID: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  ingredientList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecipeInProgressIngredients;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport AppContext from '../Context/AppContext';\n\nimport './RecipeInProgressButton.css';\n\nfunction RecipeInProgressButton({ type, recipe, recipeID }) {\n  const { globalState } = useContext(AppContext);\n\n  const finishRecipe = () => {\n    const inProgressStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const doneRecipesStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (type === 'food' && inProgressStorage !== null) {\n      delete inProgressStorage.meals[recipeID];\n    }\n    if (type === 'drink' && inProgressStorage !== null) {\n      delete inProgressStorage.cocktails[recipeID];\n    }\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressStorage));\n\n    // Lógica de pegar data retirada do site https://www.horadecodar.com.br/2021/04/03/como-pegar-a-data-atual-com-javascript/\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n\n    let arrayOfTags = [];\n    if (recipe.strTags !== null && recipe.strTags !== undefined) {\n      arrayOfTags = recipe.strTags.split(',');\n    }\n\n    const madeRecipeObject = {\n      id: recipeID,\n      type: (type === 'food' ? 'comida' : 'bebida'),\n      area: recipe.strArea || '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe.strDrink || recipe.strMeal,\n      image: recipe.strMealThumb || recipe.strDrinkThumb,\n      doneDate: dataAtual,\n      tags: arrayOfTags,\n    };\n    const newDoneRecipesStorage = [\n      ...doneRecipesStorage,\n      madeRecipeObject,\n    ];\n    localStorage.setItem('doneRecipes', JSON.stringify(newDoneRecipesStorage));\n  };\n\n  return (\n    <div className=\"recipeInProgressButtonContainer\">\n      <Link to=\"/receitas-feitas\">\n        <Button\n          data-testid=\"finish-recipe-btn\"\n          variant=\"success\"\n          onClick={ () => finishRecipe() }\n          disabled={ !globalState.madeRecipe }\n          className=\"recipeButton\"\n        >\n          Finalizar Receita\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nRecipeInProgressButton.propTypes = {\n  recipeID: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  recipe: PropTypes.shape({\n    id: PropTypes.string,\n    strMeal: PropTypes.string,\n    strDrink: PropTypes.string,\n    strAlcoholic: PropTypes.string,\n    strArea: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strCategory: PropTypes.string,\n    strTags: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecipeInProgressButton;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getCocktailByID } from '../Services/fetchCocktails';\nimport { getMealByID } from '../Services/fetchMeals';\n\nimport RecipeDetailHeader from '../Components/RecipeDetailHeader';\nimport RecipeDetailInstructions from '../Components/RecipeDetailInstructions';\nimport RecipeInProgressIngredients from '../Components/RecipeInProgressIngredients';\nimport RecipeInProgressButton from '../Components/RecipeInProgressButton';\n\nimport './RecipeInProgress.css';\n\nfunction RecipeInProgress({ type }) {\n  const [recipe, setRecipe] = useState({});\n  const [ingredientsEMeasuresList, setIngredientsEMeasuresList] = useState([]);\n  const { recipeID } = useParams();\n\n  const getIngredients = (data) => {\n    const ingredientsList = (Object.entries(data))\n      .filter((key) => key[0].includes('strIngredient'))\n      .filter((ingredient) => ingredient[1] !== null\n      && ingredient[1] !== '' && ingredient[1] !== ' ');\n\n    const measuresList = (Object.entries(data))\n      .filter((key) => key[0].includes('strMeasure'))\n      .map((measure) => {\n        if (measure[1] === null || measure[1] === '') {\n          return ' ';\n        }\n        return measure[1];\n      });\n\n    setIngredientsEMeasuresList(ingredientsList\n      .map((ingredient, index) => (\n        {\n          ingredient: `${ingredient[1]} - ${measuresList[index]}`,\n          done: false,\n        }\n      )));\n  };\n\n  useEffect(() => {\n    if (type === 'food') {\n      getMealByID(recipeID).then((data) => {\n        setRecipe(data);\n        getIngredients(data);\n      });\n    }\n\n    if (type === 'drink') {\n      getCocktailByID(recipeID).then((data) => {\n        getIngredients(data);\n        setRecipe(data);\n      });\n    }\n\n    const doneStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneStorage === null) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n  }, [type, recipeID]);\n\n  if (recipe !== {}) {\n    return (\n      <div className=\"recipeInProgress\">\n        <img\n          src={ recipe.strMealThumb || recipe.strDrinkThumb }\n          alt=\"Recipe\"\n          data-testid=\"recipe-photo\"\n          className=\"recipeInProgressImage\"\n        />\n        <div className=\"infoContainer\">\n          <RecipeDetailHeader type={ type } recipe={ recipe } recipeID={ recipeID } />\n          <RecipeInProgressIngredients\n            ingredientList={ ingredientsEMeasuresList }\n            type={ type }\n            recipeID={ recipeID }\n          />\n          <RecipeDetailInstructions recipe={ recipe } />\n          <RecipeInProgressButton type={ type } recipe={ recipe } recipeID={ recipeID } />\n        </div>\n      </div>\n    );\n  }\n\n  return (<div>Carregando...</div>);\n}\n\nRecipeInProgress.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecipeInProgress;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Explore from '../Pages/Explore';\nimport ExploreDrinksAndFoods from '../Pages/ExploreDrinksAndFoods';\nimport ExploreDrinksAndFoodsByIng from '../Pages/ExploreDrinksAndFoodsByIngredients';\nimport ExploreFoodsByOrigin from '../Pages/ExploreFoodsByOrigin';\nimport FoodsAndDrinks from '../Pages/FoodsAndDrinks';\nimport Login from '../Pages/Login';\nimport MadeAndFavoriteRecipes from '../Pages/MadeAndFavoriteRecipes';\nimport NotFound from '../Pages/NotFound';\nimport Profile from '../Pages/Profile';\nimport RecipesDetails from '../Pages/RecipesDetails';\nimport RecipeInProgress from '../Pages/RecipeInProgress';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/bebidas\" component={ FoodsAndDrinks } />\n      <Route\n        exact\n        path=\"/bebidas/:recipeID/in-progress\"\n        render={ (props) => <RecipeInProgress { ...props } type=\"drink\" /> }\n      />\n      <Route\n        exact\n        path=\"/bebidas/:recipeID\"\n        render={ (props) => <RecipesDetails { ...props } type=\"drink\" /> }\n      />\n      <Route exact path=\"/explorar\" component={ Explore } />\n      <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinksAndFoods } />\n      <Route\n        exact\n        path=\"/explorar/bebidas/ingredientes\"\n        component={ ExploreDrinksAndFoodsByIng }\n      />\n      <Route exact path=\"/explorar/comidas\" component={ ExploreDrinksAndFoods } />\n      <Route\n        exact\n        path=\"/explorar/comidas/ingredientes\"\n        component={ ExploreDrinksAndFoodsByIng }\n      />\n      <Route exact path=\"/explorar/comidas/area\" component={ ExploreFoodsByOrigin } />\n      <Route exact path=\"/receitas-favoritas\" component={ MadeAndFavoriteRecipes } />\n      <Route exact path=\"/comidas\" component={ FoodsAndDrinks } />\n      <Route\n        exact\n        path=\"/comidas/:recipeID/in-progress\"\n        render={ (props) => <RecipeInProgress { ...props } type=\"food\" /> }\n      />\n      <Route\n        exact\n        path=\"/comidas/:recipeID\"\n        render={ (props) => <RecipesDetails { ...props } type=\"food\" /> }\n      />\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/receitas-feitas\" component={ MadeAndFavoriteRecipes } />\n      <Route exact path=\"/perfil\" component={ Profile } />\n      <Route exact path=\"/explorar/bebidas/area\" component={ NotFound } status={ 404 } />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from './AppContext';\nimport { fetchMeals, fetchMealsCategories } from '../Services/fetchMeals';\nimport { fetchCocktails, fetchCocktailsCategories } from '../Services/fetchCocktails';\n\nfunction Provider({ children }) {\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [mealsCategories, setMealsCategories] = useState([]);\n  const [drinksCategories, setDrinksCategories] = useState([]);\n  const [ingredientFilter, setIngredientFilter] = useState('');\n  const [foodOrDrink, setFoodOrDrink] = useState('');\n  const [madeRecipe, setMadeRecipe] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [search, setSearch] = useState([]);\n  const [loadSearch, setLoadSearch] = useState(false);\n\n  const globalState = {\n    email: userEmail,\n    meals,\n    drinks,\n    mealsCategories,\n    drinksCategories,\n    madeRecipe,\n    ingredientFilter,\n    foodOrDrink,\n    search,\n    loadSearch,\n  };\n\n  const contextValue = {\n    globalState,\n    setUserEmail,\n    setMadeRecipe,\n    setSearch,\n    setLoadSearch,\n    setIngredientFilter,\n    setFoodOrDrink,\n  };\n\n  useEffect(() => {\n    const getMealsAndDrinks = async () => {\n      const mealsApi = await fetchMeals();\n      const drinksApi = await fetchCocktails();\n      const mealsCategoriesApi = await fetchMealsCategories();\n      const drinksCategoriesApi = await fetchCocktailsCategories();\n\n      setMeals(mealsApi);\n      setDrinks(drinksApi);\n      setMealsCategories(mealsCategoriesApi);\n      setDrinksCategories(drinksCategoriesApi);\n    };\n\n    getMealsAndDrinks();\n  }, []);\n\n  return (\n    <AppContext.Provider value={ contextValue }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './Services/Routes';\nimport Provider from './Context/AppProvider';\n\nfunction App() {\n  return (\n    <Provider>\n      <div>\n        <Routes />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}